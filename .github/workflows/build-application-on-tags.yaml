name: Build Application

on:
  push:
    tags:
      - 'v*.*.*'

jobs:

  build:
    timeout-minutes: 60
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: web
            os: ubuntu-latest
            path: build/web
          - platform: macos
            os: macos-15
            path: build/macos/Build/Products/Release/mangastash.app
          - platform: windows
            os: windows-latest
            path: build/windows/x64/runner/Release/mangastash.exe
          - platform: linux
            os: ubuntu-latest
            path: build/linux/x64/release/bundle/mangastash
#          - platform: ipa
#            os: macos-latest
#            path: build/ios/ipa
          - platform: apk
            os: ubuntu-latest
            path: build/app/outputs/apk/release/app-release.apk
    steps:
      - name: 'Git Checkout'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref }}
      - name: 'Install Linux Dependencies'
        if: ${{ matrix.platform == 'linux' }}
        run: |
          sudo apt-get update -y
          sudo apt-get install -y ninja-build libgtk-3-dev
      - name: 'Install Java'
        uses: actions/setup-java@v2
        if: ${{ matrix.platform == 'apk' }}
        with:
          distribution: 'zulu'
          java-version: '17'
      - name: 'Install Flutter'
        uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.29.3'
          cache: true
      - name: 'Flutter Doctor'
        run: flutter doctor -v
      - name: 'Install Melos'
        run: flutter pub global activate melos 6.2.0
      - name: 'Bootstrap Workspace'
        run: melos bootstrap --verbose
      - name: 'Build Application'
        run: flutter build ${{ matrix.platform }} --dart-define=FARO_API_KEY=${{ secrets.FARO_API_KEY }} --dart-define=FARO_COLLECTOR_URL=${{ secrets.FARO_COLLECTOR_URL }}
      - name: 'Compress Directory'
        uses: somaz94/compress-decompress@v1
        if: ${{ matrix.platform == 'web' }}
        with:
          command: compress
          source: ${{ matrix.path }}
          format: zip
          dest: build
          destfilename: 'web'
      - name: 'Attach artifact to release'
        if: ${{ matrix.platform == 'web' }}
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ matrix.path }}.zip
      - name: 'Attach artifact to release'
        if: ${{ matrix.platform != 'web' }}
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ matrix.path }}
      - name: 'Deploy to Firebase'
        if: ${{ matrix.platform == 'web' }}
        uses: FirebaseExtended/action-hosting-deploy@v0
        with:
          repoToken: ${{ secrets.GITHUB_TOKEN }}
          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_MANGASTASH_4BF38 }}
          channelId: live
          projectId: mangastash-4bf38
      - name: 'Deploy to Github Page'
        if: ${{ matrix.platform == 'web' }}
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ${{ matrix.path }}
          force_orphan: true
          user_name: 'robzimpulse'
          user_email: 'kugelfang.killaruna@gmail.com'
          commit_message: 'Publish to gh-pages'
      - name: 'Save Artifact'
        if: ${{ matrix.platform == 'apk' }}
        id: upload_artifact_apk
        uses: actions/upload-artifact@v4
        with:
          name: release-${{ matrix.platform }}
          path: ${{ matrix.path }}
      - name: 'Send debug APK to telegram'
        if: ${{ matrix.platform == 'apk' }}
        uses: appleboy/telegram-action@master
        with:
          to: ${{ secrets.TELEGRAM_GROUP_CHAT_ID }}
          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          message: |
            Here is the debug APK for ${{ github.event_name }}
            Runner OS: ${{ runner.os }}
            Event: ${{ github.event_name }}
            Job ID: ${{ github.job }}
            Triggered by: ${{ github.actor }}
            Branch or TAG: ${{ github.ref }}
            Commit SHA: ${{ github.sha }}
            Artifact URL is: ${{ steps.upload_artifact_apk.outputs.artifact-url }}

#
#  build-web:
#    timeout-minutes: 30
#    runs-on: ubuntu-latest
#    steps:
#      - name: 'Git Checkout'
#        uses: actions/checkout@v4
#        with:
#         fetch-depth: 0
#         ref: ${{ github.ref }}
#      - name: 'Install Flutter'
#        uses: subosito/flutter-action@v2
#        with:
#          flutter-version: '3.29.3'
#          cache: true
#      - name: 'Flutter Doctor'
#        run: flutter doctor -v
#      - name: 'Install Melos'
#        run: flutter pub global activate melos 6.2.0
#      - name: 'Bootstrap Workspace'
#        run: melos bootstrap --verbose
#      - name: 'Build Application'
#        run: flutter build web
#      - name: 'Save Artifact'
#        id: upload_artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: release-web
#          path: build/web
#      - name: 'Deploy to Firebase'
#        uses: FirebaseExtended/action-hosting-deploy@v0
#        with:
#          repoToken: ${{ secrets.GITHUB_TOKEN }}
#          firebaseServiceAccount: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_MANGASTASH_4BF38 }}
#          channelId: live
#          projectId: mangastash-4bf38
#      - name: 'Deploy to Github Page'
#        uses: peaceiris/actions-gh-pages@v4
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          publish_dir: /build/web
#          force_orphan: true
#          user_name: 'robzimpulse'
#          user_email: 'kugelfang.killaruna@gmail.com'
#          commit_message: 'Publish to gh-pages'
#      - name: 'Compress Directory'
#        uses: somaz94/compress-decompress@v1
#        with:
#          command: compress
#          source: build/web
#          format: zip
#          dest: build
#          destfilename: 'web'
#      - name: 'Attach artifact to release'
#        uses: softprops/action-gh-release@v2
#        with:
#          files: build/web.zip
#
#  build-apk:
#    timeout-minutes: 30
#    runs-on: ubuntu-latest
#    steps:
#      - name: 'Git Checkout'
#        uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#          ref: ${{ github.ref }}
#      - name: 'Install Flutter'
#        uses: subosito/flutter-action@v2
#        with:
#          flutter-version: '3.29.3'
#          cache: true
#      - name: 'Install Java'
#        uses: actions/setup-java@v2
#        with:
#          distribution: 'zulu'
#          java-version: '17'
#      - name: 'Flutter Doctor'
#        run: flutter doctor -v
#      - name: 'Install Melos'
#        run: flutter pub global activate melos 6.2.0
#      - name: 'Bootstrap Workspace'
#        run: melos bootstrap --verbose
#      - name: 'Build APK'
#        run: flutter build apk
#      - name: 'Save Artifact'
#        id: upload_artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: release-apk
#          path: build/app/outputs/apk/release/app-release.apk
#      - name: 'Send debug APK to telegram'
#        uses: appleboy/telegram-action@master
#        with:
#          to: ${{ secrets.TELEGRAM_GROUP_CHAT_ID }}
#          token: ${{ secrets.TELEGRAM_BOT_TOKEN }}
#          message: |
#            Here is the debug APK for ${{ github.event_name }}
#            Runner OS: ${{ runner.os }}
#            Event: ${{ github.event_name }}
#            Job ID: ${{ github.job }}
#            Triggered by: ${{ github.actor }}
#            Branch or TAG: ${{ github.ref }}
#            Commit SHA: ${{ github.sha }}
#            Artifact URL is: ${{ steps.upload_artifact.outputs.artifact-url }}
#      - name: 'Attach artifact to release'
#        uses: softprops/action-gh-release@v2
#        with:
#          files: build/app/outputs/apk/release/app-release.apk
#
#  build-macos:
#    timeout-minutes: 30
#    runs-on: macos-latest
#    steps:
#      - name: 'Git Checkout'
#        uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#          ref: ${{ github.ref }}
#      - name: 'Install Flutter'
#        uses: subosito/flutter-action@v2
#        with:
#          flutter-version: '3.29.3'
#          cache: true
#      - name: 'Flutter Doctor'
#        run: flutter doctor -v
#      - name: 'Install Melos'
#        run: flutter pub global activate melos 6.2.0
#      - name: 'Bootstrap Workspace'
#        run: melos bootstrap --verbose
#      - name: 'Build Application'
#        run: flutter build macos
#      - name: 'Save Artifact'
#        id: upload_artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: release-macos
#          path: build/macos/Build/Products/Release/mangastash.app
#      - name: 'Attach artifact to release'
#        uses: softprops/action-gh-release@v2
#        with:
#          files: build/macos/Build/Products/Release/mangastash.app
#
#  build-windows:
#    timeout-minutes: 30
#    runs-on: windows-latest
#    steps:
#      - name: 'Git Checkout'
#        uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#          ref: ${{ github.ref }}
#      - name: 'Install Flutter'
#        uses: subosito/flutter-action@v2
#        with:
#          flutter-version: '3.29.3'
#          cache: true
#      - name: 'Flutter Doctor'
#        run: flutter doctor -v
#      - name: 'Install Melos'
#        run: flutter pub global activate melos 6.2.0
#      - name: 'Bootstrap Workspace'
#        run: melos bootstrap --verbose
#      - name: 'Build Application'
#        run: flutter build windows
#      - name: 'Save Artifact'
#        id: upload_artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: release-windows
#          path: build/windows/x64/runner/Release/mangastash.exe
#      - name: 'Attach artifact to release'
#        uses: softprops/action-gh-release@v2
#        with:
#          files: build/windows/x64/runner/Release/mangastash.exe
#
#  build-linux:
#    timeout-minutes: 30
#    runs-on: ubuntu-latest
#    steps:
#      - name: 'Git Checkout'
#        uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#          ref: ${{ github.ref }}
#      - name: 'Install Flutter'
#        uses: subosito/flutter-action@v2
#        with:
#          flutter-version: '3.29.3'
#          cache: true
#      - name: 'Install Linux Dependencies'
#        run: |
#          sudo apt-get update -y
#          sudo apt-get install -y ninja-build libgtk-3-dev
#      - name: 'Flutter Doctor'
#        run: flutter doctor -v
#      - name: 'Install Melos'
#        run: flutter pub global activate melos 6.2.0
#      - name: 'Bootstrap Workspace'
#        run: melos bootstrap --verbose
#      - name: 'Build Application'
#        run: flutter build linux
#      - name: 'Save Artifact'
#        id: upload_artifact
#        uses: actions/upload-artifact@v4
#        with:
#          name: release-linux
#          path: build/linux/x64/release/bundle/mangastash
#      - name: 'Attach artifact to release'
#        uses: softprops/action-gh-release@v2
#        with:
#          files: build/linux/x64/release/bundle/mangastash